@page
@using ToDoList.Models
@model ToDoList.Pages.toDo.IndexModel
@{
}
<head>
<style>
 .header {
  padding: 20px 0;
}
.header .logo {
  line-height: 0;
  text-decoration: none;
}

.header .logo img {
  max-height: 40px;
  margin-right: 6px;
}

.header .logo span {
  font-size: 30px;
  font-weight: 700;
  letter-spacing: 1px;
  color: #080808;
  font-family: sans-serif;
  margin-top: 3px;
}
.navbar {
  padding: 0;
}
.navbar ul {
  margin: 0;
  padding: 0;
  display: flex;
  list-style: none;
  align-items: center;
}

.navbar li {
  position: relative;
}
.navbar a,
.navbar a:focus {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 10px 0 10px 30px;
  font-family: sans-serif;
  font-size: 16px;
  font-weight: 700;
  color: #0d0d0e;
  white-space: nowrap;

}

.navbar a i,
.navbar a:focus i {
  font-size: 12px;
  line-height: 0;
  margin-left: 5px;
}

.navbar a:hover,
.navbar .active,
.navbar .active:focus,
.navbar li:hover>a {
  color: #964DF4;
}

.navbar .Registerbtn{
    color: #fff;
}

.btnGetStart{
    border-color: #8145F2;
    background-color: #fff;
}

.btnGetStart:hover,
.btnGetStart:focus
{
background-color: #964DF4;
color: #fff;
}

</style>
</head>

<body>

   <header class="header">
        <div class="container-fluid container-xl d-flex align-items-center justify-content-between">
            <a href="#" class="logo d-flex align-items-center">
                <img src="~/images/logotask1.jpg"/>
                <span>Task It</span>
            </a>
            <nav id="navbar" class="navbar">
                <ul>
                  <li><a class="nav-link  active" href="#">Home</a></li>
                  <li><a class="nav-link " href="#">About</a></li>
                  <li><a class="nav-link " href="#">Contact</a></li>
                  <li><a class="nav-link " asp-page="/Auth/Login">Login</a></li>
                  <li style="background: #964DF4;text-align: center; margin-left:10px; " class="btn "><a class="Registerbtn" style="padding: 2px; text-decoration: none; color: #fff;" asp-page="/Auth/Register">Register</a></li>
                </ul>
                <i class="bi bi-list mobile-nav-toggle"></i>
              </nav>

        </div> 
       
    </header>
    
    <section  class="d-flex align-items-center">

        <div class="container">
          <div class="row mt-4">
            <div class="col-lg-6 d-flex flex-column justify-content-center" data-aos="zoom-in">
              <h1 style="font-weight: bold; color: #8145F2;">Daily Task Managment</h1>
              <h2 class="mt-2 py-3 lh-3">Say hello to Task It, an app that will help you to handle your process and project. With mininalistic and easy to understand style of design.</h2>
              <div>
                <div class="text-center text-lg-start mt-3"  data-aos="zoom-in">
                  <a href="#" class="btn btnGetStart d-inline-flex align-items-center justify-content-center align-self-start " >
                    Get Started
                  </a>
                </div>
              </div>
            </div>
            <div class="col-lg-6 "  data-aos="zoom-in">
              <img src="~/images/task2.jpg" class="img-fluid" alt="">
            </div>
          </div>
        </div>
    
      </section>

   
        <form method="get">
<div class="mt-5">

       
             	<div class="row p-5">
                      <div class="col text-start">
                        <a onclick="ShowModelAddEdit('editModel',@System.Text.Json.JsonSerializer.Serialize(new TaskToDo()),false)" class="btn btn-outline-success px-4 py-2">  Add Task</a>
                    </div>
                 
                 
        <div class="col-4 text-end d-flex">
        <select class="form-control me-3"  asp-for="@Model.taskQueryParameter.SortOrder" onchange="submit()">
@*			<option value="-1">Select option</option>
*@			<option value="asc">A-Z</option>
			<option value="desc">Z-A</option>
		</select>

        <select class="form-control ms-2" asp-for="@Model.taskQueryParameter.categoryID"  onchange="submit()" asp-items="@Model.selectedcategory">
            <option value="-1">Select option</option>
        </select>

        </div>
	</div>
  <div class="container ">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col-md-12 col-xl-10">

        <div class="card">
          <div class="card-header p-3">
            <h5 class="mb-0"><i class="fas fa-tasks me-2"></i>Task List</h5>
          </div>
       

	<div>


		<table class="table table-responsive table-hover">
   <thead>
    <tr>
      <th scope="col">ID</th>
      <th scope="col">Title</th>
      <th scope="col">Description</th>
      <th scope="col">Date</th>
      <th scope="col">IsCompleted</th>
      <th scope="col">Manage</th>
    </tr>
  </thead>
  <tbody>
      @foreach(var item in @Model.tasks)
{
    <tr>
      <th>@item.Id</th>
      <td>@item.title</td>
      <td>@item.description</td>
      <td>@item.Date?.ToString("dd-MM-yy")</td>
      @if(@item.IsCompleted==0){
           <td><img src="~/images/false.png"/></td>
      }
      else{
           <td><img src="~/images/true.png"/></td>
      }
        
     <td>
      <a class="btn btn-outline-primary" onclick="ShowModelAddEdit('editModel',@System.Text.Json.JsonSerializer.Serialize(item),true)"> Edit</a> |
       <form method="post" asp-page-handler="Delete" asp-route-id="@item.Id"class="d-inline">
        <a onclick="DeleteConfirm(this);" class="btn btn-outline-danger" >Delete</a>
      </form>
     </td>
    
    </tr>	
}
  </tbody>
</table>
	</div>
       </div>
          </div>
          </div>
          </div>

</div>
</form>
    



 <section class="mt-5">
  <footer class="text-center text-white" style="background-color: #964DF4;">
    <div class="container p-4 pb-0">
      <section class="">
        <p class="d-flex justify-content-center align-items-center">
          <span class="me-3">Register for free</span>
          <button type="button" class="btn btn-outline-light btn-rounded" >
              <a asp-page="/Auth/Register" style="list-style:none;" class="text-dark">
               Sign up!    
              </a>
          </button>
        </p>
      </section>
    </div>
    <div class="text-center p-3" style="background-color:#964DF4;">
      © 2023 Copyright:
      <a class="text-white" >Alaa Yassin</a>
    </div>
  </footer>
</section>


</body>

<div class="modal fade" id="editModel" tabindex="-1" aria-labelledby="editLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editLabel"> </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div> 
            <form id="frmCRUD" method="post">
                <div class="modal-body">
                       <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
@*                            <label asp-for="task.Id" class="control-label"></label>
*@                            <input hidden asp-for="task.Id"  class="form-control" />
@*                            <span  asp-validation-for="task.Id" class="text-danger"></span>
*@                        </div>
                        <div class="form-group">
                            <label asp-for="task.title"  class="control-label"></label>
                            <input asp-for="task.title" class="form-control" />
                            <span asp-validation-for="task.title"  class="text-danger"></span>
                        </div>
                          <div class="form-group">
                            <label asp-for="task.description"  class="control-label"></label>
                            <input asp-for="task.description" class="form-control" />
                            <span asp-validation-for="task.description"  class="text-danger"></span>
                        </div>
                          <div class="form-group">
                            <label asp-for="task.IsCompleted"  class="control-label"></label>
                            <input asp-for="task.IsCompleted" class="form-control" />
                            <span asp-validation-for="task.IsCompleted"  class="text-danger"></span>
                        </div>
                           <div class="form-group">
                            <label asp-for="task.Date"  class="control-label"></label>
                            <input asp-for="task.Date" class="form-control" type="date"/>
                            <span asp-validation-for="task.Date"  class="text-danger"></span>
                        </div>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button id="ptnedit" type="submit" class="btn btn-primary" asp-page-handler="Edit">Save</button>
                    <button id="ptnadd"  type="submit" class="btn btn-primary" asp-page-handler="Add">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
     <script>

        function ShowModelAddEdit(modelid,dataObj,isedit=false)
        {
            let modelElm = document.getElementById(modelid);
            var myModal = new bootstrap.Modal(modelElm, {
                keyboard: false
            })
            console.log(dataObj)
                if(dataObj!==null)
                {                       
                    modelElm.querySelector('#task_Id').value = dataObj.Id;
                   
                    modelElm.querySelector('#task_title').value = dataObj.title;

                    modelElm.querySelector('#task_description').value = dataObj.description;
                    modelElm.querySelector('#task_IsCompleted').value = dataObj.IsCompleted;
                        
                    try{
                        if( modelElm.querySelector('#task_Date')!==null)
                        if (dataObj.Date===null)
                            modelElm.querySelector('#task_Date').valueAsDate = null;
                        else
                        {
                            let dateofbirth = new Date(dataObj.Date);
                            dateofbirth.setDate(dateofbirth.getDate() + 1);
                            modelElm.querySelector('#task_Date').valueAsDate = dateofbirth;
                        }
                    }catch(e){
                        alert(e)
                    }
                }
          
                toggleModelAction(modelElm,isedit);
            
            myModal.toggle()
        }

                function toggleModelAction(modelElm,isedit) {
                if (isedit === true) {
                    modelElm.querySelector('#ptnadd').hidden = true;
                    modelElm.querySelector('#ptnedit').hidden = false;
                    modelElm.querySelector('div.modal-header h5.modal-title').innerHTML = "Edit Task";
              
                    modelElm.querySelector('#task_Id').readOnly = true;
                    modelElm.querySelector('#task_Id').style.color = "#c0c0c0";

                }
                else {
                    modelElm.querySelector('#ptnadd').hidden = false;
                    modelElm.querySelector('#ptnedit').hidden = true;
                    modelElm.querySelector('div.modal-header h5.modal-title').innerHTML = "Add Task";
                    modelElm.querySelector('#task_Id').readOnly = false;
                    modelElm.querySelector('#task_Id').style.color = "#000";
                }
            }

        function DeleteConfirm(tagElm){
         let delForm=tagElm.parentElement|| null;
        Swal.fire({
         title: 'Are you sure?',
         text: "You won't be able to revert this!",
         icon: 'warning',
         showCancelButton: true,
         confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
     if(delForm!==null){
         delForm.submit();
     }
    Swal.fire(
      'Deleted!',
      'Your file has been deleted.',
      'success'
    )
  }

})
    }
        </script>
}

